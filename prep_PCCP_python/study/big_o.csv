"자료구조","연산","시간복잡도","실제 활용","주의사항"
"List","인덱싱list[i]","O(1)","빠른 랜덤 접근","메모리 연속 배치"
"","끝에 추가append()","O(1)","동적 배열 구성","메모리 재할당 가능"
"","앞에 삽입insert(0, x)","O(n)","⚠️ 비효율적","deque 사용 권장"
"","삭제del list[i]","O(n)","⚠️ 비효율적","뒤에서부터 삭제 권장"
"","탐색x in list","O(n)","작은 데이터만","set/dict 사용 권장"
"","정렬sort()","O(n log n)","Timsort 알고리즘","안정 정렬"
"Set","추가add(x)","O(1)","중복 제거","해시 테이블 기반"
"","탐색x in set","O(1)","🔥 매우 빠름","List보다 압도적"
"","삭제remove(x)","O(1)","효율적 제거","KeyError 주의"
"","합집합s1 | s2","O(len(s1)+len(s2))","집합 연산","새 set 생성"
"Dict","조회dict[key]","O(1)","빠른 매핑","해시 충돌 시 O(n)"
"","삽입dict[key] = val","O(1)","동적 확장","메모리 오버헤드"
"","삭제del dict[key]","O(1)","효율적 제거","KeyError 주의"
"","순회for k in dict","O(n)","순서 보장 (3.7+)","수정 중 순회 금지"